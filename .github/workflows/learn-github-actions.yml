name: Deploy to AWS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      # - run: npm run prettier
      # - run: npm run linter

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build --if-present
  test:
    name: Test
    needs:
      - build 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      
      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build --if-present
      
      - name: Install Unit test
        run: npm test

      - name: Run the tests and generate coverage report
        run: npm test -- --coverage
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    name: Deploy to poduction
    needs:
      - build 
      - test
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to production
        run: |
          echo "Deploying to production..."
          # Add your deployment commands here        

      - name: Deploy to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Deploy application
        run: |
          aws s3 sync build/ s3://react-action-s3-bucket-app --delete
          aws cloudfront create-invalidation --distribution-id E2DIV2WJG1O5ZX --paths '/*'
          